{"ast":null,"code":"const deleteOrder = (token, id) => {\n  return fetch(\"http://165.22.166.131:4000/orders/\".concat(id), {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(resp => {\n    if (resp.status === 200) {\n      return resp.json();\n    } else if (resp.status === 401) {\n      return Promise.reject({\n        message: 'No existe token v치lido'\n      });\n    } else if (resp.status === 404) {\n      return Promise.reject({\n        message: 'Orden inv치lida'\n      });\n    }\n\n    return Promise.reject({\n      message: resp.statusText\n    });\n  });\n};\n\nexport default deleteOrder;","map":{"version":3,"sources":["/home/maga/Desktop/hackatone/src/controller/orders/delete.js"],"names":["deleteOrder","token","id","fetch","method","headers","then","resp","status","json","Promise","reject","message","statusText"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC/B,SAAOC,KAAK,6CAAsCD,EAAtC,GAA2C;AACrDE,IAAAA,MAAM,EAAE,QAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYJ;AAFtB;AAF4C,GAA3C,CAAL,CAMJK,IANI,CAMEC,IAAD,IAAU;AAChB,QAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvB,aAAOD,IAAI,CAACE,IAAL,EAAP;AACD,KAFD,MAEO,IAAIF,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAC9B,aAAOE,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf,CAAP;AACD,KAFM,MAEA,IAAIL,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAC9B,aAAOE,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf,CAAP;AACD;;AACD,WAAOF,OAAO,CAACC,MAAR,CAAe;AAAEC,MAAAA,OAAO,EAAEL,IAAI,CAACM;AAAhB,KAAf,CAAP;AACD,GAfM,CAAP;AAiBD,CAlBH;;AAmBE,eAAeb,WAAf","sourcesContent":["const deleteOrder = (token, id) => {\n    return fetch(`http://165.22.166.131:4000/orders/${id}`,{\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then((resp) => {\n      if (resp.status === 200) {\n        return resp.json()\n      } else if (resp.status === 401) {\n        return Promise.reject({ message: 'No existe token v치lido' })\n      } else if (resp.status === 404) {\n        return Promise.reject({ message: 'Orden inv치lida' })\n      }\n      return Promise.reject({ message: resp.statusText })\n    })\n  \n  }\n  export default deleteOrder;"]},"metadata":{},"sourceType":"module"}